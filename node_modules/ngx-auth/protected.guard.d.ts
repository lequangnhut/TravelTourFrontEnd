import { CanActivateFn, Router, RouterStateSnapshot } from '@angular/router';
import { Observable } from 'rxjs';
import { AuthService } from './auth.service';
import * as i0 from "@angular/core";
/**
 * Guard, checks access token availability and allows or disallows access to page,
 * and redirects out
 */
export declare class ProtectedGuard {
    private authService;
    private publicFallbackPageUri;
    private readonly document;
    private router;
    constructor(authService: AuthService, publicFallbackPageUri: string, document: Document, router: Router);
    /**
     * CanActivate handler
     */
    canActivate(state: RouterStateSnapshot): Observable<boolean>;
    /**
     * Check, if current page is fallback page
     */
    private isPublicPage;
    /**
     * Navigate away from the app / path
     */
    private navigate;
    static ɵfac: i0.ɵɵFactoryDeclaration<ProtectedGuard, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<ProtectedGuard>;
}
export declare const protectedGuard: CanActivateFn;
